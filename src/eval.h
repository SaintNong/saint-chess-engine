#pragma once

#include "board.h"

// Min and max
#define MIN(A, B) ((A) < (B) ? (A) : (B))
#define MAX(A, B) ((A) > (B) ? (A) : (B))

static const int middleGameMaterial[NB_PIECES] = {
    85, 320, 325, 480, 1000, 100000,
};

static const int endGameMaterial[NB_PIECES] = {
    95, 320, 325, 510, 970, 100000
};

static const int middleGamePSQT[NB_PIECES][64] = {
    // Pawns
      0,  0,  0,  0,  0,  0,  0,  0,
     50, 50, 50, 50, 50, 50, 50, 50,
     10, 20, 20, 30, 30, 20, 20, 10,
      5,  5,  5, 23, 25,  5,  5,  5,
      2, -5,  5, 17, 20,  0,  0,  2,
      3,  0,  2,  2,  3, -5,  3,  4,
      5, 10,  0,-11,-11, 13, 10,  3,
      0,  0,  0,  0,  0,  0,  0,  0,
    // Knights
    -30,-20,-20,-20,-20,-20,-20,-30,
    -20,-10,  0,  0,  0,  0,-10,-20,
    -20,  0, 15, 25, 25, 15,  0,-20,
    -20,  5, 20, 20, 20, 20,  5,-20,
    -20,  0,  7, 15, 15,  8,  0,-20,
    -20,  5,  4,  4,  4,  5,  5,-20,
    -20,-10,  0,  1,  1,  0,-10,-20,
    -30, -5, -3, -3, -3, -3, -5,-30,
    // Bishops
    -10,-10,-10,-10,-10,-10,-10,-10,
     -2,  5,  0,  0,  0,  0,  5, -2,
     -2,  3,  5, 10, 10,  5,  3, -2,
     -2,  9,  6, 15, 15,  6,  9, -2,
     -2,  0,  9, 15, 15,  9,  0, -2,
     -2,  2,  5,  3,  3,  5,  2, -3,
     -2,  5,  1,  1,  1,  1, 15, -2,
    -10, -5, -5, -4, -4, -5, -5,-10,
    // Rooks
      5,  5,  5,  5,  5,  5,  5,  5,
     10, 20, 20, 20, 20, 20, 20, 10,
     -5,  0,  0,  3,  3,  0,  0, -5,
     -5,  0,  0,  3,  3,  0,  0, -5,
     -5,  0,  0,  3,  3,  0,  0, -5,
     -5,  0,  5,  3,  3,  3,  0, -5,
     -8,  0,  0,  3,  3,  0,  0, -8,
    -10, -8,  5, 10, 10,  5, -8,-10,
    // Queens
    -30,-25,-25,-25,-25,-25,-10,-30,
    -10,-10,-20,-20,-20,-20,-10,-10,
    -10,-10,-15,-15,-15,-15,-10,-10,
    -10,-10,-15,-15,-15,-15,-10,-10,
     -5,-10,-10,-10,-10,-10,-10, -5,
     -5, -5,  0,  0,  0,  0, -5, -5,
     -5, -5,  9,  5,  5,  2, -5, -5,
    -10, -5, -2, -2, -2, -2, -5,-10,
    // Kings
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-30,-30,-30,-30,-30,-30,-30,
    -20,-20,-20,-20,-20,-20,-20,-20,
    -10,-20,-15,-20,-20,-15,-20,-10,
     20, 11,-10,-10,-10,-10, 12, 20,
     15, 25,  3, -5, -5,  5, 28, 18,
};

static const int endGamePSQT[NB_PIECES][64] = {
    // Pawns
      0,  0,  0,  0,  0,  0,  0,  0,
    150,130,120,120,120,120,130,150,
     90, 80, 80, 80, 80, 80, 80, 90,
     40, 35, 32, 30, 30, 32, 35, 40,
     20, 15, 12,  5,  5, 12, 15, 20,
     10,  5,  2,  0,  0,  2,  5, 10,
     10,  5,  2,  0,  0,  2,  5, 10,
      0,  0,  0,  0,  0,  0,  0,  0,
    // Knights
    -30,-20,-20,-20,-20,-20,-20,-30,
    -20,-15, -5, -5, -5, -5,-15,-20,
    -20, -5,  5,  5,  5,  5, -5,-20,
    -20, -5,  5, 10, 10,  5, -5,-20,
    -20, -5,  5, 10, 10,  5, -5,-20,
    -20, -5,  5,  5,  5,  5, -5,-20,
    -20,-15, -5, -5, -5, -5,-15,-20,
    -30,-20,-20,-20,-20,-20,-20,-30,
    // Bishops
     -3,-10,-10,-10,-10,-10,-10, -3,
    -10,  5, -5, -5, -5, -5,  5,-10,
    -10,  0, 10,  5,  5, 10,  0,-10,
    -10,  0,  8, 15, 15,  8,  0,-10,
    -10,  0,  8, 15, 15,  8,  0,-10,
    -10,  0, 10,  5,  5, 10,  0,-10,
    -10,  5,  0,  0,  0,  0,  5,-10,
     -3,-10,-10,-10,-10,-10,-10, -3,
    // Rooks
      0,  5,  5,  5,  5,  5,  5,  0,
     15, 20, 20, 20, 20, 20, 20, 15,
     -5,  0,  5,  5,  5,  5,  0, -5,
     -5,  0,  5,  5,  5,  5,  0, -5,
     -5,  0,  5,  5,  5,  5,  0, -5,
     -5,  0,  3,  3,  3,  3,  0, -5,
     -5,  0,  0,  0,  0,  0,  0, -5,
     -5,-10,-10,-10,-10,-10,-10, -5,
    // Queens
    -10,-10,-10,-10,-10,-10,-10,-10,
    -10, -5, -5, -5, -5, -5, -5,-10,
    -10, -5,  5,  5,  5,  5, -5,-10,
    -10, -5,  5, 10, 10,  5, -5,-10,
    -10, -5,  5, 10, 10,  5, -5,-10,
    -10, -5,  5,  5,  5,  5, -5,-10,
    -10, -5, -5, -5, -5, -5, -5,-10,
    -10,-10,-10,-10,-10,-10,-10,-10,
    // Kings
    -70,-50,-50,-50,-50,-50,-50,-70,
    -50,-20,-20,-20,-20,-20,-20,-50,
    -50,-20,  0,  0,  0,  0,-20,-50,
    -50,-20,  0,  5,  5,  0,-20,-50,
    -50,-20,  0,  5,  5,  0,-20,-50,
    -50,-20,  0,  0,  0,  0,-20,-50,
    -50,-20,-20,-20,-20,-20,-20,-50,
    -70,-50,-50,-50,-50,-50,-50,-70,
};

static const int mobilityBonus[2][NB_PIECES] = {
    0, 1, 4, 3, 1,-2,
    0, 1, 3, 2, 2, 0,
};

static const int kingAttackBonus[2][NB_PIECES] = {
     0,  1,  2,  3,  5,  0,
     0,  0,  0,  0,  2,  0,
};

static const int passedPawnBonus[2][8] = {
    0,   5,   5,  15,  25,  45,  90, 0,
    0,  18,  18,  30,  45,  80, 120, 0,
};

#define BISHOP_PAIR_BONUS 30
#define CASTLE_BONUS 20
#define STM_BONUS 9

#define ISOLATED_PAWN_PENALTY 12
#define DOUBLED_PAWN_PENALTY_MG 10
#define DOUBLED_PAWN_PENALTY_EG 35

// Game phases
enum { middlegame, endgame };

// At the start it adds to 256
#define START_PHASE 256
#define KNIGHT_PHASE 10
#define BISHOP_PHASE 10
#define ROOK_PHASE 22
#define QUEEN_PHASE 44

int evaluate(Board *board);
void initPawnMasks();
